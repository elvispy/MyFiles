% This script will summarize relevant information about pressure at contact
% points in the kinematic match.

close all; clearvars;
sss = 10; plot_video = false;

%% Reading the file to be analyzed
% As of 25/12, we are using simul27_0.795_1214 as an exmple
[file, path] = uigetfile('*.mat', 'Select a File', ...
    'simulations\');
load(fullfile(path, file), 'recordedPk', 'recordedTimes', 'rt', 'N', 'rS','Tm', 'mu');

%% Plotting snapshots

perfilSubida = figure(1);
set(gcf,'position',[100, 100, 560, 420], 'Units', 'pixels');
%title('Perfil de presión en diversos tiempos', ...
%        'FontSize', 14, 'FontName', 'Cambria');
set(gca, ...
      'Box'         , 'on'       , ...
      'FontSize'    , 16         , ...
      'TickDir'     , 'in'       , ...
      'YGrid'       , 'off'      , ...
      'TickLength'  , [.02 .02]  , ...
      'XMinorTick'  , 'off'      , ...
      'YMinorTick'  , 'on'       , ...
      'YGrid'       , 'on'       , ...
      'XColor'      , [.3 .3 .3] , ...
      'YColor'      , [.3 .3 .3] , ...
      'YTick'       , 0:1:5  , ...
      'XTick'       , 0:0.15:1);
xlim([0, 1]);
xlabel('$r_{c}/R$', 'FontSize', 24, 'Interpreter', 'latex');
ylabel('$\frac{P R}{\tau} \ \ \ $', 'Interpreter', 'latex', 'Rotation', 0, ...
      'FontSize', 24);
ylim([-0.1, 2.5]);
grid on; hold on;

perfilBajada = figure(2);
set(gcf,'position',[700, 100, 560, 420], 'Units', 'pixels');
%title('Perfil de presión en diversos tiempos', ...
%        'FontSize', 14, 'FontName', 'Cambria');
set(gca, ...
      'Box'         , 'on'       , ...
      'FontSize'    , 16         , ...
      'TickDir'     , 'in'       , ...
      'YGrid'       , 'off'      , ...
      'TickLength'  , [.02 .02]  , ...
      'XMinorTick'  , 'off'      , ...
      'YMinorTick'  , 'on'       , ...
      'YGrid'       , 'on'       , ...
      'XColor'      , [.3 .3 .3] , ...
      'YColor'      , [.3 .3 .3] , ...
      'YTick'       , 0:1:5  , ...
      'XTick'       , 0:0.15:1);
xlim([0, 1]);
xlabel('$r_{c}/R$', 'FontSize', 24, 'Interpreter', 'latex');
ylabel('$\frac{P R}{\tau} \ \ \ $', 'Interpreter', 'latex', 'Rotation', 0, ...
      'FontSize', 24);
ylim([-0.1, 2.5]);
grid on; hold on;


Tunit = 1; %rS/sqrt(Tm/mu);
rt = rt/Tunit; % Dimensionless recorded time
recordedTimes = recordedTimes/Tunit;
Punit = Tm/rS;
recordedPk = recordedPk/Punit;

Legends = cell(sss, 1);
idxs = mod(recordedTimes+1e-8, rt) < 1e-6;
recordedPk = recordedPk(idxs, :);
recordedTimes = recordedTimes(idxs);

%recordedPk = recordedPk(1:2250, :);
[mii, Ntot] = size(recordedPk);
xAxis = linspace(0, 1, Ntot); YtickMax = (12/10) * max(recordedPk(:));
idxs = round(mii * linspace(5/mii, 1-10/mii, sss));

for ii = 1:sss
    Pk = recordedPk(idxs(ii), :); 
    if ii <= sss/2
        figure(perfilSubida);hold on;
        P = plot(xAxis, Pk, ...
            'LineWidth', 3 - 6*(ii-1)/sss+.5, ...
            'Color', [0/256, round(2*(1/2- (ii-1) / sss), 2), round(2*(ii-1)/sss, 2)]);
        Legends{ii} = sprintf('t = %5.2f ms', rt * idxs(ii));
    else
        figure(perfilBajada); hold on;
        P = plot(xAxis, Pk, ...
            'LineWidth', 6*(ii/sss-1/2)+.5, ...
            'Color', [0/256, round(2*ii/sss-1, 2), round(2*(1- ii / sss), 2)]);
        Legends{ii} = sprintf('t = %5.2f ms', rt * idxs(ii));
    end
end

figure(perfilSubida);
legend(Legends(1:floor(length(idxs)/2)), 'Location', 'NorthEast', 'FontSize', 16);
print(perfilSubida, '-depsc', '-r300', 'Graficos/pressureProfileUp.eps');

figure(perfilBajada);
legend(Legends(floor(length(idxs)/2+1):end), 'Location', 'NorthEast', 'FontSize', 16);
print(perfilBajada, '-depsc', '-r300', 'Graficos/pressureProfileDown.eps');
