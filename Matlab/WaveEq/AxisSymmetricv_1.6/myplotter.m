%Plotter to see stored data
%%%
join = true;
%%%
close;
[file, path] = uigetfile('*.*', 'Select One or More Files', 'simulations\');
if isequal(file, 0)
    values = readtable([pwd, '/simulations/historial.csv'], 'PreserveVariableNames', true);
else
    values = readtable(fullfile(path, file), 'PreserveVariableNames', true);
    [file2, path2] = uigetfile('*.*', 'Select One or More Files', 'simulations\');
    values2 = readtable(fullfile(path2, file2), 'PreserveVariableNames', true);
end

%% Settings of radii to be plotted
symbol = {'o'; '>'; 's'; '<'; '^'; 'p'; 'h'; 'd'; 'v'; '+'};

cats = {0.35; 0.5; 0.795; 1.25; 1.75; 2; 2.38; 2.78; 3; 3.175};
configs = struct('radius', cats, 'symbols', symbol);
cols = values.Properties.VariableNames([2 5 6]);

%% CONTACT TIME
if join == true
    tiledlayout(1, 2);
    set(gcf,'position',[100,100,1400,500], 'Units', 'pixels');
    nexttile;
    title({'Tiempo de contacto numéricos y',  'experimentales vs velocidad de impacto'}, ...
        'FontSize', 14, 'FontName', 'Cambria');
    
    hold on;
    scatter(NaN, NaN, 's', 'o', 'black', 'MarkerEdgeColor', 'black', ... 
        'LineWidth', 1, 'DisplayName', 'Datos numéricos');
    scatter(NaN, NaN, 's', 'filled', 'black', 'MarkerEdgeColor', 'black', ... 
        'LineWidth', 1, 'DisplayName', 'Datos experimentales');
    
    
else
    tiledlayout(2, 2);
    set(gcf,'position',[300,5,1000,750]);
    nexttile;
    title('Datos numéricos', ...
        'FontSize', 18, 'FontName', 'Cambria');
end
 
% NUMERICAL DATA, MAXIMUM TENSION
set(gca, ...
  'Box'         , 'off'     , ...
  'TickDir'     , 'out'     , ...
  'TickLength'  , [.02 .02] , ...
  'XMinorTick'  , 'on'      , ...
  'YMinorTick'  , 'on'      , ...
  'YGrid'       , 'on'      , ...
  'XColor'      , [.3 .3 .3], ...
  'YColor'      , [.3 .3 .3], ...
  'YTick'       , 0:5:25    , ...
  'LineWidth'   , 1         );
hold on; grid on;
xlim([0, 1.5]);
xlabel('Velocidad inicial (m/s)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');
ylim([-0.5, 25]);
ylabel('Tiempo de contacto (ms)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');

F = cell(length(configs) + 2, 1);
F{1} = 'Datos numéricos';
F{2} = 'Datos experimentales';

for ii = 1:length(configs)
    auxtbl = values(abs(values.radius - configs(ii).radius) < 0.1, :);
    auxtbl = auxtbl(:, cols);
    
    if isempty(auxtbl) == 0
        F{ii+2} = scatter(-auxtbl{:, cols(1)}, auxtbl{:, cols(2)});   
        set(F{ii+2}                           , ...
            'LineWidth'       , 1.2         , ...
            'SizeData'        , 100         , ...
            'MarkerEdgeColor' , 'black'     , ...
            'DisplayName'     , sprintf('R = %6.3g mm', configs(ii).radius) , ...
            'Marker'          , configs(ii).symbols );        
        F{ii+2} = F{ii+2}.DisplayName;
    end
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Dados experimentais
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if join == false
    nexttile; grid on;
    title('Datos experimentales', ...
        'FontSize', 18, 'FontName', 'Cambria');
    set(gca, ...
      'Box'         , 'off'     , ...
      'TickDir'     , 'out'     , ...
      'TickLength'  , [.02 .02] , ...
      'XMinorTick'  , 'on'      , ...
      'YMinorTick'  , 'on'      , ...
      'YGrid'       , 'on'      , ...
      'XColor'      , [.3 .3 .3], ...
      'YColor'      , [.3 .3 .3], ...
      'YTick'       , 0:5:25    , ...
      'LineWidth'   , 1         );
end

expCtime = readtable('datos_experimentales/cTimeExp.csv', ...
    'PreserveVariableNames', true);
cols = expCtime.Properties.VariableNames;

%First, contact time
hold on; grid on;
xlim([0, 1.5]);
xlabel('Velocidad inicial (m/s)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');
ylim([-0.1, 25]);
ylabel('Tiempo de contacto (ms)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');

for ii = 1:length(configs)
    auxtbl = expCtime(abs(expCtime.radius - configs(ii).radius) < 0.1, :);
    auxtbl = auxtbl(:, cols);
    
    if isempty(auxtbl) == 0
        Fe = scatter(auxtbl{:, cols(2)}, auxtbl{:, cols(1)}, ...
                'filled', 'black');   
        set(Fe                            , ...
            'LineWidth'       , 1.2      , ...
            'SizeData'        , 50       , ...
            'MarkerEdgeColor' , 'black'  , ...
            'Marker'          , configs(ii).symbols );        
            %'DisplayName'     , sprintf('R = %6.3g mm', configs(ii).radius) , ...
    end
end

F = F(~cellfun('isempty',F));
legend(F, 'Location', 'NorthEast', 'FontSize', 10);

%% MAXIMUM DEFLECTION

% NUMERICAL DATA FIRST
nexttile;
set(gca, ...
  'Box'         , 'off'     , ...
  'TickDir'     , 'out'     , ...
  'TickLength'  , [.02 .02] , ...
  'XMinorTick'  , 'on'      , ...
  'YMinorTick'  , 'on'      , ...
  'YGrid'       , 'on'      , ...
  'XColor'      , [.3 .3 .3], ...
  'YColor'      , [.3 .3 .3], ...
  'YTick'       , 0:1.5:6    , ...
  'LineWidth'   , 1         );
if join == true
    title({'Deflexión Máxima numéricos y',  'experimentales vs velocidad de impacto'}, ...
        'FontSize', 14, 'FontName', 'Cambria');
    
    hold on;
    scatter(NaN, NaN, 's', 'o', 'black', 'MarkerEdgeColor', 'black', ... 
        'LineWidth', 1, 'DisplayName', 'Datos numéricos');
    scatter(NaN, NaN, 's', 'filled', 'black', 'MarkerEdgeColor', 'black', ... 
        'LineWidth', 1, 'DisplayName', 'Datos experimentales');

end

cols = values.Properties.VariableNames([2 5 6]);


hold on; grid on;
xlim([0, 1.5]);
xlabel('Velocidad inicial (m/s)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');
ylim([-0.1, 6.5]);
ylabel('Deflexión máxima (ms)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');

F = cell(length(configs) + 2, 1);
F{1} = 'Datos numéricos';
F{2} = 'Datos experimentales';

for ii = 1:length(configs)
    auxtbl = values(abs(values.radius - configs(ii).radius) < 0.1, :);
    auxtbl = auxtbl(:, cols);
    
    if isempty(auxtbl) == 0
        F{ii+2} = scatter(-auxtbl{:, cols(1)}, auxtbl{:, cols(3)});   
        set(F{ii+2}                         , ...
            'LineWidth'       , 1.2         , ...
            'SizeData'        , 100         , ...
            'MarkerEdgeColor' , 'black'   , ...
            'DisplayName'     , sprintf('R = %6.3g mm', configs(ii).radius) , ...
            'Marker'          , configs(ii).symbols );   
        F{ii+2} = F{ii+2}.DisplayName;
    end
end


% NOW EXPERIMENTAL DATA
%Maximum Deflection
expmDef = readtable('datos_experimentales/maxDefExp.csv', 'PreserveVariableNames', true);
cols = expmDef.Properties.VariableNames;

%Now Maximum Deflection
if join == false
    nexttile; grid on;
    set(gca, ...
      'Box'         , 'off'     , ...
      'TickDir'     , 'out'     , ...
      'TickLength'  , [.02 .02] , ...
      'XMinorTick'  , 'on'      , ...
      'YMinorTick'  , 'on'      , ...
      'YGrid'       , 'on'      , ...
      'XColor'      , [.3 .3 .3], ...
      'YColor'      , [.3 .3 .3], ...
      'YTick'       , 0:1.5:6    , ...
      'LineWidth'   , 1         );
end
hold on; grid on;
xlim([0, 1.5]);
xlabel('Velocidad inicial (m/s)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');
ylim([-0.1, 6.5]);
ylabel('Deflexión máxima (ms)', ...
    'FontSize', 14, 'FontWeight', 'bold', 'FontName', 'Cambria Math');

for ii = 1:length(configs)
    auxtbl = expmDef(abs(expmDef.radius - configs(ii).radius) < 0.1, :);
    auxtbl = auxtbl(:, cols);
    
    if isempty(auxtbl) == 0
        Fe = scatter(auxtbl{:, cols(2)}, auxtbl{:, cols(1)}, ...
            'filled', 'black');   
        set(Fe                               , ...
            'LineWidth'       , 1.2         , ...
            'SizeData'        , 50          , ...
            'MarkerEdgeColor' , 'black'   , ...
            'DisplayName'     , sprintf('R = %6.3g mm', configs(ii).radius) , ...
            'Marker'          , configs(ii).symbols );        
    end
end
F = F(~cellfun('isempty',F));
legend(F, 'Location', 'NorthEast', 'FontSize', 10);










